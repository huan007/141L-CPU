000000000
100000000	\\imme $r0 0 //MSHI
011010001	\\lw $r1 $r0
011010000	\\lw $r0 $r0
001111001	\\lsrc $r1 $r2 //shift 7
001011001	\\lslc $r1 $r2 //shift 7
101100110	\\imme $r2 25 //signloc
011001001	\\sw $r1 $R2
101110001	\\imme $r1 28 //7F
010100100	\\and $r0 $r1
100000101	\\imme $r1 1 //lshi
011010101	\\lw $r1 $r1
101110111	\\imme $r3 29
011111111	\\asw $r3
101011010	\\imme $r2 22 //64, 0x40
010100010	\\and $r2 $r0
100000011	\\imme $r3 0
011101110	\\cmp $r2 $r3
111010000	\\bne 16 STOPLOOP (+10)
001010101	\\lslc $r1 $r1
001011100	\\lslc $r0 $r3
011111011	\\alw $r3
000110111	\\subc $r3 $r1
011111111	\\asw $r3
100000010	\\imme $r2 0
011101110	\\cmp $r2 $r3
111010001	\\bne 17 LOOP (-13)
100100010	\\imme $r2 8
100100011	\\imme $r3 8
010100110	\\and $r2 $r1
011101110	\\cmp $r2 $r3
111010010	\\bne 18 NOROUND (+22)
101001010	\\imme $r2 18 //23
100000011	\\imme $r3 0
010100110	\\and $r2 $r1
011101011	\\cmp $r3 $r2
111010011	\\bne 19 ROUND (+4)
100000110	\\imme $r2 1
011101011	\\cmp $r3 $r2
111010100	\\bne 20 NOROUND //Always
100100010	\\imme $r2 8
000001001	\\add $r1 $r2
000011100	\\addc $r0 $r3
100101010	\\imme $r2 10 //0x80
100101011	\\imme $r3 10 //0x80
010100010	\\and $r2 $r0
011101110	\\cmp $r2 $r3
111010101	\\bne 21 NOOVERFLOW
001110100	\\lsrc $r0 $r1
001111101	\\lsrc $r1 $r3
011111011	\\alw $r3
000010111	\\addc $r3 $r1
011111111	\\asw $r3
100010010	\\imme $r2 4
100000011	\\imme $r3 0
001110100	\\lsrc $r0 $r1
001111101	\\lsrc $r1 $r3
000110110	\\subc %r2 $r1
011101110	\\cmp $r2 $r3
111010110	\\bne 22 loop2 (-4)
100001110	\\imme #r2 3
010101000	\\and $r0 $r2
100011010	\\imme $r2 6 //lshend
011001001	\\sw $r1 $r2
100001010	\\imme $r2 2
011111011	\\alw $r3
001001011	\\lsl $r3 $r2
010111100	\\or $r0 $r3
101100110	\\imme $r2 25 //signloc
011011010	\\lw $r2 $r2
010111000	\\or $r0 $r2
100010101	\\imme $r1 5 //MSHend
011000100	\\sw $r0 $r1
011100000	\\halt 0
