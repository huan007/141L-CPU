

%Registers used: $1, $2, $3, $0
%Mem location used: A1, A2, B1, B2, LARGEEXP, DIFFEXP, LOWERSIG, UPPERSIG, UPPERSIGA UPPERSIGMASK, UPPER, LOWER

%store in memory
%asw $1
%imme $1, A2
%sw $2, $1
%imme $1, B1
%sw $3, $1
%imme $1, B2
%sw $0, $1
%alw $1
%imme $2, A1
%sw $1, $2
imme $3, A1
imme $0, A2
lw $1, $3
lw $2, $0

%extract exponent
imme $3, 3
imme $0, 1
lsl $1, $0
lsl $2, $0
lsr $1, $3
lsr $2, $3

%compare exponents subtract smaller from larger
cmp $2, $1
blt 0 %2smaller %this is (+27). Maps to loc 0

%swap A and B
imme $0, A1
lw $3, $0
asw $3
imme $0, B1
lw $3, $0
imme $0, A1
sw $3, $0
alw $3
imme $0, B1
sw $3, $0

imme $0, A2
lw $3, $0
asw $3
imme $0, B2
lw $3, $0
imme $0, A2
sw $3, $0
alw $3
imme $0, B2
sw $3, $0

imme $3, 0
add $3, $1
imme $1, 0
add $1, $2
imme $2, 0
add $2, $3
2smaller:

%set result exponent to larger of addend exponents
imme $3, LARGEEXP
sw $1, $3
sub $1, $2
imme $3, DIFFEXP
sw $1, $3

%lsr significand of smaller number by difference between exponents
imme $2, B2
lw $2, $2
imme $0, DIFFEXP
lw $0, $0
lsr $2, $0
imme $0, LOWERSIG
sw $2, $0

%mask fractions and append 1
imme $3, B1
lw $3, $3
imme $2, 6
lsl $3, $2
lsr $3, $2
imme $2, 4 %0x00000100
or $3, $2

imme $1, 0
add $1, $3
asw $1
imme $0, DIFFEXP
lw $0, $0
lsr $1, $0
imme $2, UPPERSIG
sw $1, $2
alw $3
imme $2, 8
sub $2, $0
imme $0, 0
cmp $0, $2
blt 1 $rshift = (+8), maps to 1

lsl $3, $2
imme $1, UPPERSIGMASK
sw $3, $1

%branch always
imme $1, 0
imme $2, 1
cmp $1, $2
bne 2 %rshiftend maps to loc 2 (+7)
rshift:
neg $2, $2
imme $1, 1
add $2, $1
lsr $3, $2
imme $1, UPPERSIGMASK
sw $3, $1
rshiftend:
imme $0, UPPERSIGMASK
lw $1, $0
imme $0, LOWERSIG
lw $2, $0
or $2, $1 %completed lower of B2

%prepend 1 to A significand
imme $0, A1
lw $3, $0
imme $2, 6
lsl $3, $2
lsr $3, $2
imme $2, 4 %0x00000100
or $3, $2
imme $0, UPPERSIGA
sw $3, $0

%sum significands
imme $0, A2
lw $1, $0
add $1, $2
imme $0, UPPER
sw $1, $0
imme $0, UPPERSIG
lw $2, $0
imme $0, UPPERSIGA
lw $3, $0
addc $2, $3
imme $0, LOWER
sw $2, $0

%if sum overflow, right shift by 1 and increment exponent by 1
imme $0, 4
lsl $1, $0
imme $0, 7
lsr $1, $0
imme $0, 1
cmp $1, $0
bne 3 %notoverflow (+17)
imme $0, UPPER
lw $1, $0
imme $0, LOWER
lw $2, $0
imme $0, 1
lsr $1, $0
lsrc $2, $0
imme $0, UPPER
sw $1, $0
imme $0, LOWER
sw $2, $0
imme $0, LARGEEXP
lw $1, $0
imme $3, 1
add $1, $3
sw $1, $0
notoverflow:

%merge sum significand and exponent and set sign bit
%set sign bit
imme $0, A1
lw $1, $0
imme $0, 1
imme $3, 7
lsl $0, $3
and $1, $0
imme $0, LARGEEXP
lw $2, $0
imme $0, 2
lsl $2, $0
or $1, $2

%strip leading 1 off sum significand
imme $0, 7 %0x00000011
imme $3, UPPER
lw $2, $3
and $2, $0
or $1, $2
sw $1, $3
imme $0, LOWER
lw $2, $0

%Result stored in UPPER and LOWER, or alternatively $1, $2
halt 0
