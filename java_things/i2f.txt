imme $r0 0 //MSHI
lw $r1 $r0
lw $r0 $r0
lsrc $r1 $r2 //shift 7
lslc $r1 $r2 //shift 7
imme $r2 25 //signloc
sw $r1 $R2
imme $r1 28 //7F
and $r0 $r1
imme $r1 1 //lshi
lw $r1 $r1
imme $r3 29
asw $r3
LOOP:
imme $r2 22 //64, 0x40
and $r2 $r0
imme $r3 0
cmp $r2 $r3
bne 16 STOPLOOP (+10)
//shift left and decrement exp
lslc $r1 $r1
lslc $r0 $r3
alw $r3
subc $r3 $r1
asw $r3
imme $r2 0
imme $r3 1
cmp $r2 $r3
blt 17 LOOP (-13)
STOPLOOP
imme $r2 8
imme $r3 8
and $r2 $r1
cmp $r2 $r3
bne 18 NOROUND (+22)
imme $r2 18 //23
imme $r3 0
and $r2 $r1
cmp $r3 $r2
bne 19 ROUND (+4)
imme $r2 1
cmp $r3 $r2
bne 20 NOROUND //Always
ROUND
imme $r2 8
add $r1 $r2
addc $r0 $r3
//overflow check
imme $r2 10 //0x80
imme $r3 10 //0x80
and $r2 $r0
cmp $r2 $r3
bne 21 NOOVERFLOW
lsrc $r0 $r1
lsrc $r1 $r3
alw $r3
addc $r3 $r1
asw $r3
NOROUND / NOOVERFLOW
imme $r2 4
imme $r3 0
loop2
lsrc $r0 $r1
lsrc $r1 $r3
subc %r2 $r1
cmp $r2 $r3
bne 22 loop2 (-4)
imme #r2 3
and $r0 $r2
imme $r2 6 //lshend
sw $r1 $r2
imme $r2 2
alw $r3
lsl $r3 $r2
or $r0 $r3
imme $r2 25 //signloc
lw $r2 $r2
or $r0 $r2
imme $r1 5 //MSHend
sw $r0 $r1
halt 0
