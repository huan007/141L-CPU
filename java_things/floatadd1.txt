

%Registers used: $1, $2, $3, $0
%Mem location used: 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 28, 29, 30, 31

%store in memory
imme $1, 10
lw $1, $1
imme $2, 28
sw $1, $2
imme $1 ,11
lw $1, $1
imme $2, 29
sw $1, $2
imme $1 ,12
lw $1, $1
imme $2, 30
sw $1, $2
imme $1 ,13
lw $1, $1
imme $2, 31
sw $1, $2
imme $3, 10
imme $0, 12
lw $1, $3
lw $2, $0

%extract exponent
imme $3, 3
imme $0, 1
lsl $1, $0
lsl $2, $0
lsr $1, $3
lsr $2, $3

%compare exponents subtract smaller from larger
cmp $2, $1
blt 0 %2smaller %this is (+27). Maps to loc 0

%swap A and B
imme $0, 28
lw $3, $0
asw $3
imme $0, 30
lw $3, $0
imme $0, 28
sw $3, $0
alw $3
imme $0, 30
sw $3, $0

imme $0, 29
lw $3, $0
asw $3
imme $0, 31
lw $3, $0
imme $0, 29
sw $3, $0
alw $3
imme $0, 31
sw $3, $0

imme $3, 0
add $3, $1
imme $1, 0
add $1, $2
imme $2, 0
add $2, $3
2smaller:

%set result exponent to larger of addend exponents
imme $3, 14
sw $1, $3
sub $1, $2
imme $3, 15
sw $1, $3

%lsr significand of smaller number by difference between exponents
imme $2, 31
lw $2, $2
imme $0, 15
lw $0, $0
lsr $2, $0
imme $0, 16
sw $2, $0

%mask fractions and append 1
imme $3, 30
lw $3, $3
imme $2, 6
lsl $3, $2
lsr $3, $2
imme $2, 4 %0x00000100
or $3, $2

imme $1, 0
add $1, $3
asw $1
imme $0, 15
lw $0, $0
lsr $1, $0
imme $2, 17
sw $1, $2
alw $3
imme $2, 8
sub $2, $0
imme $0, 0
cmp $2, $0
blt 1 $rshift = (+8), maps to 1

lsl $3, $2
imme $1, 19
sw $3, $1

%branch always
imme $1, 0
imme $2, 1
cmp $1, $2
bne 2 %rshiftend maps to loc 2 (+7)
rshift:
neg $2, $2
imme $1, 1
add $2, $1
lsr $3, $2
imme $1, 19
sw $3, $1
rshiftend:
imme $0, 19
lw $1, $0
imme $0, 16
lw $2, $0
or $2, $1 %completed 21 of 13
asw $2

%prepend 1 to A significand
imme $0, 28
lw $3, $0
imme $2, 6
lsl $3, $2
lsr $3, $2
imme $2, 4 %0x00000100
or $3, $2
imme $0, 18
sw $3, $0

%sum significands
imme $0, 29
lw $1, $0
alw $2
add $1, $2
imme $3, 0
addc $3, $3
asw $3
imme $0, 21
sw $1, $0
imme $0, 17
lw $2, $0
imme $0, 18
lw $3, $0
alw $0
add $2, $0
add $2, $3
imme $0, 20
sw $2, $0

%if sum overflow, right shift by 1 and increment exponent by 1
imme $0, 4
lsl $2, $0
imme $0, 7
lsr $2, $0
imme $0, 1
cmp $2, $0
bne 3 %notoverflow (+17)
imme $0, 20
lw $1, $0
imme $0, 21
lw $2, $0
imme $0, 1
lsr $1, $0
lsrc $2, $3
lsr $2, $0
imme $0, 20
sw $1, $0
imme $0, 21
sw $2, $0
imme $0, 14
lw $1, $0
imme $3, 1
add $1, $3
sw $1, $0
notoverflow:

%merge sum significand and exponent and set sign bit
%set sign bit
imme $0, 28
lw $1, $0
imme $0, 1
imme $3, 7
lsl $0, $3
and $1, $0
imme $0, 14
lw $2, $0
imme $0, 2
lsl $2, $0
or $1, $2

%strip leading 1 off sum significand
imme $0, 3 %0x00000011
imme $3, 20
lw $2, $3
and $2, $0
or $1, $2
sw $1, $3
imme $0, 21
lw $2, $0

%Result stored in 20 and 21, or alternatively $1, $2
halt 0
