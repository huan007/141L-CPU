imme $r0 10 //A1LOC
lw $r0 $r0
imme $r1 10 //0x80
imme $r2 31 (0x1f)
imme $r3 15 //15 //ASIGNLOC
and $r1 $r0
sw $r1 $r3
lslc $r2 $r1
lslc $r2 $r1
imme $r1 0
add $r1 $r2
and $r2 $r0
imme $r3 17 //AEXPLOC
lsrc $r2 $r1
lsrc $r2 $r1
sw $r2 $r3
imme $r3 3
and $r3 $r0
imme $r0 1
cmp $r2 $r0
blt 23 ZERO (+3)
imme $r0 4
or $r3 $r0
ZERO
imme $r0 22 //AMANU ZERO
sw $r3 $r0
// NOW LOAD IN B1
imme $r0 12 //b1LOC
lw $r0 $r0
and $r1 $r0
lsrc $r1 $r1
lsrc $r1 $r1
imme $r3 18 //BEXPLOC
sw $r1 $r3
imme $r2 10 //0x80
and $r2 $r0
imme $r3 16 //BSIGNLOC
sw $r2 $r3
imme $r2 3
and $r0 $r2
imme $r2 1
cmp $r1 $r2
blt 23 ZERO (+3)
imme $r2 4
or $r0 $r2
ZERO
imme $r3 26 //BMANU ZERO
sw $r0 $r3
imme $r0 17 //AEXPLOC
lw $r0 $r0
sub $r0 $r1
imme $r1 0
imme $r2 11 //A2LOC
lw $r2 $r2
imme $r3 23 //AMANL
sw $r2 $r3
imme $r2 13 //b2LOC
lw $r2 $r2
imme $r3 27 //BMANL
sw $r2 $r3
cmp $r0 $r1
blt 24 BLARGE (+37)
cmp $r1 $r0
blt 25 ALARGE (+4)
imme $r2 1
cmp $r1 $r2
bne 26 EQUAL
ALARGE // Shift B
imme $r3 26 //BMANU ALARGE
lw $r3 $r3
BSHIFT:
lsrc $r3 $1 BSHIFT
lsrc $r2 $r3
addc $r1 $r3
asw $r1
imme $r1 26 //BMANU
sw $R3 $r1
imme $r3 14 /sloc
lw $r3 $r3
alw $r1
add $r3 $r1
imme $r1 14 /sloc
sw $r3 $r1
imme $r3 26 //BMANU
lw $r3 $r3
imme $r1 0
subc $r0 $1
cmp $r0 $r1
bne 27 BSHIFT (-17)
imme $r0 26 //BMANU
sw $r3 $r0
imme $r0 27 //BMANL
sw $r2 $r0
imme $r0 14 /sloc
lw $r3 $r0
alw $r2
sub $r3 $r2
sw $r3 $r0
cmp $r0 $r1
bne 28 EQUAL
BLARGE // shift a right
imme $r1 17 //AEXPLOC BLARGE
imme $r3 18 //BEXPLOC
lw $r3 $r3
sw $r3 $r1 // replace AEXP with BEXP
imme $r1 0
imme $r3 22 //AMANU
imme $r2 23 //AMANL
lw $r2 $r2
lw $r3 $r3
ASHIFT
lsrc $r3 $r1 ASHIFT
lsrc $r2 $r3
addc $r1 $r3
asw $r1
imme $r1 22 //AMANU
sw $R3 $r1
imme $r3 14 /sloc
lw $r3 $r3
alw $r1
add $r3 $r1
imme $r1 14 /sloc
sw $r3 $r1
imme $r3 22 //AMANU
lw $r3 $r3
imme $r1 0
addc $r0 $r1
cmp $r0 $r1
bne 29 ASHIFT (-4)
imme $r0 22 //AMANU
sw $r3 $r0
imme $r0 23 //AMANL
sw $r2 $r0
imme $r0 14 /sloc
lw $r3 $r0
alw $r2
sub $r3 $r2
sw $r3 $r0
EQUAL
imme $r0 15 //ASIGNLOC EQUAL
imme $r1 16 //BSIGNLOC
lw $r0 $r0
lw $r1 $r1
cmp $r0 $r1
bne 30 SUBTRACT (+52)
ADDITION
imme $r0 22 //AMANU ADDITION
imme $r1 23 //AMANL
imme $r2 26 //BMANU
imme $r3 27 //BMANL
lw $r0 $r0
lw $r1 $r1
lw $r2 $r2
lw $r3 $r3
add $r1 $r3
addc $r0 $r3
add $r0 $r2
alw $r3
imme $r2 1
cmp $r2 $r3
bne 31 NOROUND (+13)
and $r2 $r1
imme $r3 14 /sloc
lw $r3 $r3
add $r3 $r2
imme $r2 0
cmp $r3 $r2
bne 32 ROUND (+4)
imme $r3 1
cmp $r3 $r2
bne 33 NOROUND (+3)
ROUND
addc $r1 $r1 round
addc $r0 $r3
NOROUND
asw $r1 NOROUND
imme $r3 17 //AEXPLOC
lw $r3 $r3
imme $r2 8
imme $r1 8
and $r2 $r0
cmp $r2 $r1
bne 34 NOOVERFLOW (+6)
OVERFLOW
// Shift right and add 1 to AEXP
alw $r1 OVERFLOW
lsrc $r0 $r1
lsrc $r1 $r3
asw $r1
addc $r3 $r1
NOOVERFLOW
alw $r1 NOOVERFLOW
imme $r2 21 /C2loc
sw $r1 $r2
lslc $r3 $r1
lslc $r3 $r1
imme $r2 3
and $r0 $r2
or $r0 $r3
imme $r1 15 //ASIGNLOC
lw $r1 $r1
or $r0 $r1
imme $r1 20 /C1loc
sw $r0 $r1
halt 0
SUBTRACT
imme $r0 19 //FF SUBTRACT
imme $r1 20 /C1loc
imme $r2 21 /C2loc
sw $r0 $r1
sw $r0 $r2
halt 1
